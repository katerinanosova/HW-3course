{"version":3,"file":"bundle.js","mappings":"mBAkBO,IAAMA,EAAgB,CAC3B,CACEC,KAAM,SACNC,KAAM,MACNC,MAAO,yBAET,CACEF,KAAM,SACNC,KAAM,OACNC,MAAO,0BAET,CACEF,KAAM,SACNC,KAAM,QACNC,MAAO,2BAET,CACEF,KAAM,SACNC,KAAM,OACNC,MAAO,0BAET,CACEF,KAAM,SACNC,KAAM,KACNC,MAAO,wBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,WACNC,KAAM,MACNC,MAAO,2BAET,CACEF,KAAM,WACNC,KAAM,OACNC,MAAO,4BAET,CACEF,KAAM,WACNC,KAAM,QACNC,MAAO,6BAET,CACEF,KAAM,WACNC,KAAM,OACNC,MAAO,4BAET,CACEF,KAAM,WACNC,KAAM,KACNC,MAAO,0BAET,CACEF,KAAM,WACNC,KAAM,IACNC,MAAO,yBAET,CACEF,KAAM,WACNC,KAAM,IACNC,MAAO,yBAET,CACEF,KAAM,WACNC,KAAM,IACNC,MAAO,yBAET,CACEF,KAAM,WACNC,KAAM,IACNC,MAAO,yBAET,CACEF,KAAM,SACNC,KAAM,MACNC,MAAO,yBAET,CACEF,KAAM,SACNC,KAAM,OACNC,MAAO,0BAET,CACEF,KAAM,SACNC,KAAM,QACNC,MAAO,2BAET,CACEF,KAAM,SACNC,KAAM,OACNC,MAAO,0BAET,CACEF,KAAM,SACNC,KAAM,KACNC,MAAO,wBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,SACNC,KAAM,IACNC,MAAO,uBAET,CACEF,KAAM,QACNC,KAAM,MACNC,MAAO,wBAET,CACEF,KAAM,QACNC,KAAM,OACNC,MAAO,yBAET,CACEF,KAAM,QACNC,KAAM,QACNC,MAAO,0BAET,CACEF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","sources":["webpack://hw-3course/./cards.ts","webpack://hw-3course/./timer.ts","webpack://hw-3course/./main.ts","webpack://hw-3course/./pages.ts"],"sourcesContent":["\r\nexport function shuffleCards({ page }) {\r\n  let chosenCards: Card[]  = [];\r\n\r\n  for (let i = 0; i < page * 3; i++) {\r\n    chosenCards.push(cards[Math.round(Math.random() * cards.length)]);\r\n  }\r\n\r\n  return chosenCards.concat(chosenCards).sort(() => Math.random() - 0.5);\r\n}\r\n\r\nexport type Card = {\r\n  suit: string;\r\n  rank: string;\r\n  image: string;\r\n};\r\n\r\n\r\nexport const cards: Card[] = [\r\n  {\r\n    suit: 'spades',\r\n    rank: 'ace',\r\n    image: 'static/ace_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: 'king',\r\n    image: 'static/king_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: 'queen',\r\n    image: 'static/queen_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: 'jack',\r\n    image: 'static/jack_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: '10',\r\n    image: 'static/10_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: '9',\r\n    image: 'static/9_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: '8',\r\n    image: 'static/8_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: '7',\r\n    image: 'static/7_spades.png',\r\n  },\r\n  {\r\n    suit: 'spades',\r\n    rank: '6',\r\n    image: 'static/6_spades.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: 'ace',\r\n    image: 'static/ace_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: 'king',\r\n    image: 'static/king_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: 'queen',\r\n    image: 'static/queen_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: 'jack',\r\n    image: 'static/jack_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: '10',\r\n    image: 'static/10_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: '9',\r\n    image: 'static/9_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: '8',\r\n    image: 'static/8_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: '7',\r\n    image: 'static/7_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'diamonds',\r\n    rank: '6',\r\n    image: 'static/6_diamonds.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: 'ace',\r\n    image: 'static/ace_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: 'king',\r\n    image: 'static/king_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: 'queen',\r\n    image: 'static/queen_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: 'jack',\r\n    image: 'static/jack_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: '10',\r\n    image: 'static/10_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: '9',\r\n    image: 'static/9_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: '8',\r\n    image: 'static/8_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: '7',\r\n    image: 'static/7_hearts.png',\r\n  },\r\n  {\r\n    suit: 'hearts',\r\n    rank: '6',\r\n    image: 'static/6_hearts.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: 'ace',\r\n    image: 'static/ace_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: 'king',\r\n    image: 'static/king_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: 'queen',\r\n    image: 'static/queen_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: 'jack',\r\n    image: 'static/jack_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: '10',\r\n    image: 'static/10_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: '9',\r\n    image: 'static/9_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: '8',\r\n    image: 'static/8_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: '7',\r\n    image: 'static/7_clubs.png',\r\n  },\r\n  {\r\n    suit: 'clubs',\r\n    rank: '6',\r\n    image: 'static/6_clubs.png',\r\n  },\r\n];\r\n","export let sec = 0;\r\nexport let min = 0;\r\n\r\n// export function delay(interval = 300) {\r\n//   return new Promise((resolve) => {\r\n//     setTimeout(() => {\r\n//       resolve();\r\n//     }, interval);\r\n//   });\r\n// }\r\n\r\nexport function resetTimer() {\r\n  sec = 0;\r\n  min = 0;\r\n}\r\n\r\nexport function delay(interval: number = 300): Promise<void> {\r\n  return new Promise<void>((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, interval);\r\n  });\r\n}\r\n\r\nexport function setTimer() {\r\n  sec++;\r\n  const secondsElement = document.getElementById('seconds') as HTMLDivElement;\r\n  const minutesElement = document.getElementById('minutes') as HTMLDivElement;\r\n\r\n  if (sec < 10) {\r\n    \r\n    if (secondsElement) {\r\n      secondsElement.innerHTML = '0' + sec;\r\n    }\r\n  }\r\n\r\n  if (sec > 9) {\r\n    secondsElement.innerHTML = String(sec);\r\n  }\r\n\r\n  if (sec > 59) {\r\n    min++;\r\n    minutesElement.innerHTML = '0' + min;\r\n    sec = 0;\r\n    secondsElement.innerHTML = '0' + 0;\r\n  }\r\n\r\n  if (min > 9) {\r\n    minutesElement.innerHTML = String(min);\r\n  }\r\n}\r\n","import {\r\n  START_PAGE,\r\n  GAME_LEVEL_1,\r\n  GAME_LEVEL_2,\r\n  GAME_LEVEL_3,\r\n  RESULT_PAGE,\r\n} from './pages';\r\nimport { shuffleCards, Card } from './cards';\r\nimport { delay, setTimer, sec, min, resetTimer } from './timer';\r\nimport './styles.css';\r\n\r\nexport let page: number = START_PAGE;\r\nexport let resultArray: Card[] = [];\r\nexport let win: boolean = false;\r\nexport let counter: number = 0;\r\n\r\nlet interval;\r\n\r\nconst appEl = document.querySelector('.app') as HTMLBodyElement;\r\n\r\nconst renderApp = () => {\r\n  if (page === START_PAGE) {\r\n    const startPageHtml = `\r\n            <form id=\"levelForm\" class=\"info-container\">\r\n            <h1 class=\"title\">Выбери сложность</h1>\r\n            <div class=\"levels-box\">\r\n                <input type=\"radio\" id=\"level1\" class=\"level\" value=\"1\" name=\"gameLevel\">\r\n                <label for=\"level1\">1</label>\r\n                <input type=\"radio\" id=\"level2\" class=\"level\" value=\"2\" name=\"gameLevel\">\r\n                <label for=\"level2\">2</label>\r\n                <input type=\"radio\" id=\"level3\" class=\"level\" value=\"3\" name=\"gameLevel\">\r\n                <label for=\"level3\">3</label>\r\n            </div>\r\n            <button type=\"submit\" id=\"startButton\" class=\"button\">Старт</button>\r\n            </form>`;\r\n\r\n    appEl.innerHTML = startPageHtml;\r\n\r\n    document.getElementById('startButton')?.addEventListener('click', () => {\r\n      console.log(typeof document.getElementById('startButton'));\r\n      const level = document.getElementsByName(\r\n        'gameLevel',\r\n      ) as NodeListOf<HTMLInputElement>;\r\n      for (let i = 0; i < level.length; i++) {\r\n        if (level[i].checked && level[i].value === '1') {\r\n          page = GAME_LEVEL_1;\r\n          renderApp();\r\n        } else if (level[i].checked && level[i].value === '2') {\r\n          page = GAME_LEVEL_2;\r\n          renderApp();\r\n        } else if (level[i].checked && level[i].value === '3') {\r\n          page = GAME_LEVEL_3;\r\n          renderApp();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (page !== START_PAGE && page !== RESULT_PAGE) {\r\n    const gamePageLevel1Html = `\r\n        <section class=\"app-game-page\">\r\n        <div class=\"header\">\r\n            <div class=\"timer\">\r\n                <div class=\"timer-text\">\r\n                    <p>min</p>\r\n                    <p>sek</p>\r\n                </div>\r\n                <div class=\"timer-count\">\r\n                    <p><span id=\"minutes\">00</span>.<span id=\"seconds\">00</span></p>\r\n                </div>\r\n            </div>\r\n            <button class=\"button\" id=\"restartButton\">Начать заново</button>\r\n        </div>\r\n        <div class=\"gameBody\">\r\n            <ul class=\"card-field\">\r\n\r\n            </ul>\r\n        </div>\r\n    </section>`;\r\n\r\n    appEl.innerHTML = gamePageLevel1Html;\r\n\r\n    document.getElementById('restartButton')?.addEventListener('click', () => {\r\n      page = START_PAGE;\r\n\r\n      clearInterval(interval);\r\n      resetTimer();\r\n      renderApp();\r\n    });\r\n\r\n    renderCards();\r\n  }\r\n\r\n  if (page === RESULT_PAGE) {\r\n    const resultPageHtml = `\r\n        <form id=\"levelForm\" class=\"info-container\">\r\n          <img src=\"static/${win ? `celebration` : `dead`}.png\" alt=\"\" />\r\n          <h1 class=\"title title_wide\">${\r\n            win ? `Вы выиграли` : `Вы проиграли`\r\n          }</h1>\r\n          <div class=\"timer-box\">\r\n            <p class=\"timer-box-text\">Затраченное время:</p>\r\n            <p class=\"timer-box-time\">${min < 10 ? `0` + min : min}.${\r\n              sec < 10 ? `0` + sec : sec\r\n            }</p>\r\n          </div>\r\n          <button type=\"submit\" id=\"restartButton\" class=\"button\">\r\n            Играть снова\r\n          </button>\r\n        </form>`;\r\n\r\n    appEl.innerHTML = resultPageHtml;\r\n    document.getElementById('restartButton')?.addEventListener('click', () => {\r\n      page = START_PAGE;\r\n      win = false;\r\n\r\n      clearInterval(interval);\r\n      resetTimer();\r\n      renderApp();\r\n    });\r\n  }\r\n};\r\nrenderApp();\r\n\r\nconst renderCards = () => {\r\n  let newCards = shuffleCards({ page });\r\n  let isPreviewing = true;\r\n\r\n  const renderHtml = () => {\r\n    const cardsHtml = newCards\r\n      .map((card, index) => {\r\n        return `\r\n        <li data-index='${index}' class=\"card card-back\">\r\n            ${isPreviewing ? `<img src=\"${card.image}\" alt=\"\"></img>` : ''}\r\n        </li>`;\r\n      })\r\n      .join('');\r\n    return cardsHtml;\r\n  };\r\n\r\n  const cardFieldElement = document.querySelector(\r\n    '.card-field',\r\n  ) as HTMLDivElement;\r\n\r\n  cardFieldElement.innerHTML = renderHtml();\r\n\r\n  delay(5000).then(() => {\r\n    if (isPreviewing === true) {\r\n      isPreviewing = false;\r\n      cardFieldElement.innerHTML = renderHtml();\r\n      initCardOpenListeners(newCards);\r\n      clearInterval(interval);\r\n      interval = setInterval(setTimer, 1000);\r\n    }\r\n  });\r\n};\r\n\r\nconst initCardOpenListeners = (newCards: Card[]) => {\r\n  const cardElements = document.querySelectorAll('.card');\r\n\r\n  cardElements.forEach((cardElement) => {\r\n    const divElement = cardElement as HTMLDivElement;\r\n    divElement.addEventListener('click', () => {\r\n      const index: number = Number(divElement.dataset.index);\r\n      divElement.innerHTML = `<img src=\"${newCards[index].image}\" alt=\"\"></img>`;\r\n\r\n      resultArray.push(newCards[index]);\r\n      if (resultArray.length > 1) {\r\n        delay(500).then(() => {\r\n          if (resultArray[0] === resultArray[1]) {\r\n            counter++;\r\n            winGame();\r\n            resultArray = [];\r\n          } else {\r\n            clearInterval(interval);\r\n            win = false;\r\n            resultArray = [];\r\n            counter = 0;\r\n            page = RESULT_PAGE;\r\n            renderApp();\r\n          }\r\n        });\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nfunction winGame() {\r\n  if (counter === page * 3) {\r\n    clearInterval(interval);\r\n    win = true;\r\n    page = RESULT_PAGE;\r\n    renderApp();\r\n  }\r\n}\r\n","export const START_PAGE = 5;\r\nexport const GAME_LEVEL_1 = 1;\r\nexport const GAME_LEVEL_2 = 2;\r\nexport const GAME_LEVEL_3 = 3;\r\nexport const RESULT_PAGE = 4;\r\n"],"names":["cards","suit","rank","image","sec","min","resetTimer","delay","interval","Promise","resolve","setTimeout","setTimer","secondsElement","document","getElementById","minutesElement","innerHTML","String","page","resultArray","win","counter","appEl","querySelector","renderApp","addEventListener","console","log","level","getElementsByName","i","length","checked","value","clearInterval","renderCards","resultPageHtml","newCards","chosenCards","push","Math","round","random","concat","sort","shuffleCards","isPreviewing","renderHtml","map","card","index","join","cardFieldElement","then","initCardOpenListeners","setInterval","querySelectorAll","forEach","cardElement","divElement","Number","dataset"],"sourceRoot":""}